cd '.\TimeEvolution'
reset 

#------------------------------------ PREAMBLE
set autoscale
set term wxt size 1100, 900 font "Helvetica,12"
set mxtics
set mytics

FORMAT = "set style line 12 lc rgb '#ddccdd' lt 1 lw 1.5; \
set style line 13 lc rgb '#ddccdd' lt 1 lw 0.5; \
set grid xtics mxtics ytics mytics back ls 12, ls 13;\
set size square;\
set xtics mirror;\
set ytics mirror;"
@FORMAT
set logscale x
set format x "10^{%L}"

UNSET = "unset tics; unset xlabel; unset ylabel; unset title; unset key; unset border;"
RANGE = ""

set style line 1 dt (3,5,10,5) lc rgb "black" lw 1.5
set style line 2 dt (3,3) lc rgb "red" lw 1.5
set style line 3 dt (8,8) lc rgb "blue" lw 1.5
set style line 4 dt (1,1) lc rgb "green" lw 1.5
set fit quiet
#------------------------------------ Margins for each row resp. column
TMARGIN = "set tmargin at screen 0.91; set bmargin at screen 0.56"
BMARGIN = "set tmargin at screen 0.46; set bmargin at screen 0.11"
# TICS
NOYTICS = "set format y '';"
YTICS = "set format y '%g';"

#------------------------------------ PARAMETERS
L = 14; 
g = 0.4; 
h = 0.1;
rescale = 0							# rescale the spectral function by f(w, L)?
power = 0.5							# power in scaling with omega
SigX_or_SigZ = 1	 				# 0-SigX , 1-SigZ :local, 2-SpinCur
operator_sum = 0					# is the operator a sum
site = 0							# site at which the operator acts
cor = 0								# correlations
scaling = 3							# size scaling=1 or h-scaling=0 or g-scaling=2; =3 - q-scaling
if(scaling == 3) operator_sum = 1

	h0 = 10;	hend = 80;		dh = 10;
	g0 = 10;	gend = 70;		dg = 10;
	L0 = 12;	Lend = 16; 		dL = 1;

norm = 0							# normalize by t=0 value?
LIOM = 0							# plot LIOMs?
local = 0
which = 0							#0-orders, 1-sites
n = 1								# LIOM order

f(t) = (which_fit? a - b*log(t) : a*exp(-t/b))
f_plot(a,b,t) = (which_fit? a - b*log(t) : a*exp(-t/b))
a = 1
tau = 0.1
fit = 1
which_fit = 1						#=0 - a*exp(-t/b); =1 - a-b*log(t)


#------------------------------------ GRAPHICS
my_title = "Time evolution <A(t)A> / <A(0)A> with"
if(scaling < 2) my_title = my_title.sprintf(" g=%0.2f", g)
	if(scaling < 2) {
		my_title = my_title.(scaling == 1? sprintf(", h=%.2f", h) : sprintf(", L=%d", L))
	} else{
		my_title = my_title.sprintf(", h=%.2f, L=%d", h, L)
	}
my_title = my_title."\n for operator A = ";
if(SigX_or_SigZ < 2) {
	my_title = my_title.(operator_sum? "L^{-1/2}{/Symbol S}_i" : "").(SigX_or_SigZ? "{/Symbol s}^z_" : "{/Symbol s}^x_").(operator_sum? "i" : sprintf("%d",site))
} else{
	my_title = my_title.("L^{-1/2}{/Symbol S}_i({/Symbol s}^x_i{/Symbol s}^y_{i+1}-{/Symbol s}^y_i{/Symbol s}^x_{i+1})")
}
set title my_title
set key outside right
set xlabel 't'
set ylabel '<A(t)A> / <A(0)A>'
N = 2250
chi = 0.341345													#gaussian normalization
wH(hx, gx, N, L) = sqrt(L) / (chi * N) * sqrt(1 + hx * hx + gx * gx);	# mean level spacing

#------------------------------------ DATA, FIT AND PLOT
operator = "SpinCur"
if(SigX_or_SigZ < 2) operator = (SigX_or_SigZ == 0)? "SigmaX" : "SigmaZ"
plotname = operator.(operator_sum? "" : sprintf("_j=%d",site))

name(x) = 0; key_title(x) = 0;
i0 = 0; iend = 0; di = 1;
if(!LIOM){
	RANGE = "set xrange[1e-2:5e2]; set yrange[-0.2:1.01];"
	if(scaling == 0){
		name(x) = sprintf("_L=%d,g=%.2f,h=%.2f,k=0,p=1,x=1.dat", L, g, 0.01*x); key_title(x) = sprintf("h=%.2f", x/100.)
		i0 = h0; iend = hend; di = dh;
	}else{
		if(scaling == 1){
			name(x) = sprintf("_L=%d,g=%.2f,h=%.2f,k=0,p=1,x=1.dat", x, g, h); key_title(x) = sprintf("L=%d",x);
			i0 = L0; iend = Lend; di = dL;
		} else{
			if(scaling == 2){
				name(x) = sprintf("_L=%d,g=%.2f,h=%.2f,k=0,p=1,x=1.dat", L, 0.01*x, h);	key_title(x) = sprintf("g=%.2f",0.01*x)
				i0 = g0; iend = gend; di = dg;
			} else{
				name(x) = sprintf("_j=%d_L=%d,g=%.2f,h=%.2f.dat", x, L, g, h)	
				key_title(x) = sprintf("q/{/Symbol p}=%.2f", 2*x/(L+0.0))
				i0 = 0; iend = L-1; di=1;
			}
		}
	}
} else{
	set key title 'LIOMs'
	set logscale y
	set format y "10^{%L}"
	RANGE = "set xrange[1e-2:5e2]; set yrange[1e-6:1e0];"
	tail = sprintf("_L=%d,g=%.2f,h=%.2f,k=0,p=1,x=1.dat", L, g, h)
	plotname = "timeEvolutionLIOM"
	if(local){
		iend = 5; di = 1;
		if(which == 0){
			name(x) = sprintf("%d,%d", x, site).tail; key_title(x) = sprintf("n=%d, j=%d",x, site);
			i0 = 1; 
		} else {
			name(x) = sprintf("%d,%d", n, x).tail; key_title(x) = sprintf("n=%d,j=%d",n,x);
			i0 = 0;
		}
	} else{
		i0 = 1; iend = L-1; di = 1;
		name(x) = sprintf("%d", x).tail; key_title(x) = sprintf("n=%d",x);
	}
}

	array tH[(iend-i0)/di+1]
	array LTA[(iend-i0)/di+1]
	array val[(iend-i0)/di+1]
	array a_list[(iend-i0)/di+1]; array tau_list[(iend-i0)/di+1]
	do for[i=i0:iend:di]{
		name = plotname.name(i)
		if(fit){
			fit[1e1:*][*:*] f(x) name u 1:2 via a, b
			#print key_title(i).sprintf("\t\t%.2f", tau)
			a_list[(i-i0)/di+1] = a; tau_list[(i-i0)/di+1] = b;
		}
		stats name every ::0::1 using 2 nooutput;	val[(i-i0)/di+1] = (norm ? STATS_min : 1.0)
		stats name every ::0::1 using 3 nooutput; 	tH[(i-i0)/di+1] = STATS_min
		stats name every ::0::1 using 4 nooutput; 	LTA[(i-i0)/di+1] = STATS_min
		print val[(i-i0)/di+1], tH[(i-i0)/di+1], LTA[(i-i0)/di+1]	       
	}
	set lmargin at screen 0.10; set rmargin at screen 0.8
	set multiplot
	@RANGE
	plot for[i=i0:iend:di] plotname.name(i) u 1:($2/val[(i-i0)/di + 1]) w l lw 1.5 title key_title(i)
	
	@UNSET;@RANGE
	#plot for[i=1:(iend-i0)/di+1] (x<5e0? NaN : (f_plot(a_list[i], tau_list[i], x))/val[(i-i0)/di + 1]) w l ls 1
												
	@UNSET;@RANGE
	plot for[i=i0:iend:di] plotname.name(i) u ($1 < 1e1? NaN : $1):(LTA[(i-i0)/di + 1] / val[(i-i0)/di + 1]) w l ls 2
	
	@UNSET;@RANGE
	plot for[i=i0:iend:di] '+' using (tH[(i-i0)/di + 1]):(LTA[(i-i0)/di + 1]/val[(i-i0)/di + 1]) w lp ls 3
	unset multiplot





cd '..\'
